!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).NumberFormatter=e()}(this,(function(){"use strict";const t=t=>t.replace(/[-/\\^$*+?.()|[]{}]/g,"\\$&");return class{constructor(e,r){this.group="",this.decimal=".",this._minusIndex=1,this._numberIndex=2,this._formatter=new Intl.NumberFormat(e,r);const s=this._formatter.formatToParts(-10000000.1);for(const t of s)switch(t.type){case"group":this.group=t.value;break;case"decimal":this.decimal=t.value}const i=new Intl.NumberFormat(e);this.digits=new Array(10).fill().map(((t,e)=>i.format(e)));const o=t(this.decimal),n=`[${this.digits.map(t).join("")}]`,a=t(this.group),u=this.group?`(?:${n}{1,3}${a})*${n}{1,3}(?:${o}${n}+)?`:`${n}+(?:${o}${n}+)?`;let c=!1,m="";for(const e of s)switch(e.type){case"literal":case"currency":m+=`(?:${t(e.value)})?`;break;case"minusSign":c&&(this._minusIndex=2,this._numberIndex=1),m+=`(${t(e.value)})?`;break;case"integer":c||(c=!0,m+=`(${u})`)}this._regExp=new RegExp(m)}format(t){return this._formatter.format(t)}formatToParts(t){return this._formatter.formatToParts(t)}parse(t){const e=this._regExp.exec(t);if(!e)throw new Error("Invalid number string");let r="";return e[this._minusIndex]&&(r+="-"),r+=e[this._numberIndex].replace(/./g,(t=>this.digits.includes(t)?this.digits.indexOf(t):t===this.decimal?".":"")),parseFloat(r)}resolvedOptions(){return this._formatter.resolvedOptions()}static supportedLocalesOf(t,e){return Intl.NumberFormat.supportedLocalesOf(t,e)}}}));